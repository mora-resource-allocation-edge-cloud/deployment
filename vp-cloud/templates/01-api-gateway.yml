apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.services.apiGateway.name }}
spec:
  ports:
    - port: {{ .Values.services.apiGateway.port }}
  selector:
    app: videoserver-gateway
{{- if eq .Values.vms.isCloud "true" }}
---
  {{- if eq .Values.isOpenShift true }}
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: expose-proxy
spec:
  host: {{ .Values.routes.cloudURL }}
  to:
    kind: Service
    name: {{ .Values.services.apiGateway.name }}
  {{- else }}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations: 
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
  name: expose-proxy
spec:
  rules:
  - host: {{ .Values.routes.cloudURL }}
    http:
      paths:
      - backend:
          serviceName: {{ .Values.services.apiGateway.name }}
          servicePort: {{ .Values.services.apiGateway.port }}
    {{- end }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata: 
    name: videoserver-gateway
spec:
    replicas: {{ .Values.apigateway.replicas }}
    selector:
        matchLabels:
            app: videoserver-gateway
    template:
        metadata:
          labels:
            app: videoserver-gateway
        spec:
            containers:
                - name: videoserver-gateway
                  image: {{.Values.images.cloudGateway}}
                  ports:
                  - containerPort: 8081
                  volumeMounts:
                      - mountPath: /videofiles
                        name: videoserver-videofiles
                      - mountPath: /logs
                        name: videoserver-logs
                  resources:
                    {{- toYaml .Values.resources.apigateway| nindent 20 }}
            volumes:
              - name: videoserver-videofiles
                persistentVolumeClaim:
                  claimName: videoserver-videofiles
              - name: videoserver-logs
                persistentVolumeClaim:
                  claimName: videoserver-logs
