# Default values for vp-cloud.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

utility: []

#resources to allocate
resources:
  vms:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 300m
      memory: 512Mi

  vps:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 300m
      memory: 512Mi

  mongodb:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 300m
      memory: 512Mi

  apigateway:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 300m
      memory: 512Mi

  loadbalancer:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 300m
      memory: 512Mi

  kafka:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 300m
      memory: 512Mi

  zookeeper:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 300m
      memory: 512Mi


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: { }

routes:
  cloudURL: 'cloud-vms-1.master.particles.dieei.unict.it'
  edgeURL: 'edge-vp-1.master.particles.dieei.unict.it'
  CloudIP: ''

mongodb:
  replicas: 1
  username: root
  password: toor
  authenticationDatabase: admin
  databaseName: video-server
  serviceName: mongodb

vms:
  replicas: 1
  isCloud: "true"
  maxVideo: 10
  variantType: "-1"
  needKafkaBeans: "true"

# VariantType
# 0: Cache Variant
# 1: Offline-encoding variant
# 2: Online-encoding variant

vps:
  replicas: 1

lb:
  replicas: 1
  maxConcurrentUsers: 100

apigateway:
  replicas: 1

zookeeper:
  replicas: 1

kafka:
  replicas: 1

scheme: 'http://'

services:
  apiGateway:
    name: 'api-gateway'
    port: '8081'

images:
  edgeLb: docker.io/aleskandro/video-server:edge-lb
  cloudGateway: docker.io/aleskandro/video-server:cloud-gateway
  cloudVms: docker.io/aleskandro/video-server:cloud-vms3
  cloudVps: docker.io/aleskandro/video-server:cloud-vps
  mongoDb: docker.io/bitnami/mongodb:4.4
  kafka: wurstmeister/kafka:2.11-2.0.0
  zookeeper: library/zookeeper:3.4.13




noDNSServerForCloud: false
isOpenShift: false

isMinikube: false